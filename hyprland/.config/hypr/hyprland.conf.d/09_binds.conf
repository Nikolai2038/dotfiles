# See https://wiki.hyprland.org/Configuring/Binds/ for more

bind = $mainMod SHIFT, Q, killactive,
bind = $mainMod CTRL, code:9, exit,
bind = $mainMod CTRL, Q, exec, wlogout
bind = $mainMod SHIFT, V, togglefloating,
bind = $mainMod, Z, exec, $menu
bind = $mainMod SHIFT, R, togglesplit, # dwindle
bind = $mainMod SHIFT, Z, fullscreen

bind = $mainMod, L, exec, hyprlock

$__FORCE_NEW_WINDOW = 1
$__DO_NOT_FORCE_NEW_WINDOW = 0

# ========================================
# Left monitor
$__monitor = DP-1
# ========================================

# ----------------------------------------
# Konsole
$__workspace = 101
$__key = code:49
$__class = org.kde.konsole
# ----------------------------------------
workspace = $__workspace, monitor:$__monitor, default:true, defaultName:~
# Move active window to a workspace with mainMod + SHIFT + key
bind = $mainMod SHIFT, $__key, movetoworkspace, $__workspace
# Focus existing window, or open new (we use script not just for simplicity, but to also be able to pass variable in "if" statement)
bind = $mainMod, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__DO_NOT_FORCE_NEW_WINDOW"
# Open new window
bind = $mainMod CTRL, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__FORCE_NEW_WINDOW"
# ----------------------------------------

# ----------------------------------------
# Firefox Developer Edition
$__workspace = 102
$__key = F
$__class = firefox-developer-edition
# ----------------------------------------
workspace = $__workspace, monitor:$__monitor, default:true, defaultName:$__key
bind = $mainMod SHIFT, $__key, movetoworkspace, $__workspace
bind = $mainMod, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__DO_NOT_FORCE_NEW_WINDOW"
bind = $mainMod CTRL, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__FORCE_NEW_WINDOW"
# ----------------------------------------

# ========================================

# ========================================
# Center monitor
$__monitor = DP-2
# ========================================

# ----------------------------------------
# Obsidian
$__workspace = 201
$__key = B
$__class = obsidian
# ----------------------------------------
workspace = $__workspace, monitor:$__monitor, default:true, defaultName:$__key
bind = $mainMod SHIFT, $__key, movetoworkspace, $__workspace
bind = $mainMod, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__DO_NOT_FORCE_NEW_WINDOW"
bind = $mainMod CTRL, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__FORCE_NEW_WINDOW"
# ----------------------------------------

# ----------------------------------------
# VS Code
$__workspace = 202
$__key = C
$__class = code
# ----------------------------------------
workspace = $__workspace, monitor:$__monitor, default:true, defaultName:$__key
bind = $mainMod SHIFT, $__key, movetoworkspace, $__workspace
bind = $mainMod, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__DO_NOT_FORCE_NEW_WINDOW"
bind = $mainMod CTRL, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__FORCE_NEW_WINDOW"
# ----------------------------------------

# ========================================

# ========================================
# Right monitor
$__monitor = eDP-2
# ========================================

# ----------------------------------------
# Telegram
$__workspace = 301
$__key = T
$__class = org.telegram.desktop
# ----------------------------------------
workspace = $__workspace, monitor:$__monitor, default:true, defaultName:$__key
bind = $mainMod SHIFT, $__key, movetoworkspace, $__workspace
bind = $mainMod, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__DO_NOT_FORCE_NEW_WINDOW"
bind = $mainMod CTRL, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__FORCE_NEW_WINDOW"
# ----------------------------------------

# ----------------------------------------
# Dolphin
$__workspace = 302
$__key = E
$__class = org.kde.dolphin
# ----------------------------------------
workspace = $__workspace, monitor:$__monitor, default:true, defaultName:$__key
bind = $mainMod SHIFT, $__key, movetoworkspace, $__workspace
bind = $mainMod, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__DO_NOT_FORCE_NEW_WINDOW"
bind = $mainMod CTRL, $__key, exec, ~/.config/hypr/focus_or_open_app.sh "$__class" "$__workspace" "$__FORCE_NEW_WINDOW"
# ----------------------------------------

# ========================================

# Move focus
bind = $mainMod, left, movefocus, l
bind = $mainMod, A, movefocus, l
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, A, movewindow, l

bind = $mainMod, right, movefocus, r
bind = $mainMod, D, movefocus, r
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, D, movewindow, r

bind = $mainMod, up, movefocus, u
bind = $mainMod, W, movefocus, u
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, W, movewindow, u

bind = $mainMod, down, movefocus, d
bind = $mainMod, S, movefocus, d
bind = $mainMod SHIFT, down, movewindow, d
bind = $mainMod SHIFT, S, movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Move entire workspace to left or right monitor
bind = $mainMod CTRL SHIFT, A, exec, hyprctl dispatch moveworkspacetomonitor $(hyprctl activeworkspace -j | jq '.id') +1
bind = $mainMod CTRL SHIFT, D, exec, hyprctl dispatch moveworkspacetomonitor $(hyprctl activeworkspace -j | jq '.id') -1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Show/Hide waybar
bind = $mainMod, X, exec, ~/.config/waybar/toggle_waybar.sh

# ========================================
# Clipboard manager
# ========================================
exec-once = copyq --start-server
windowrulev2 = float,class:(com.github.hluk.copyq)
windowrulev2 = move onscreen cursor,class:(com.github.hluk.copyq)
windowrulev2 = size 640 320,class:(com.github.hluk.copyq)
bind = $mainMod, V, exec, copyq show
# ========================================

# # ========================================
# # PipeWire
# # ========================================
# # Volume Up
# bind = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+

# # Volume Down
# bind = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-

# # Toggle Mute
# bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
# # ========================================

# ========================================
# PulseAudio.
# See https://wiki.linuxquestions.org/wiki/XF86_keyboard_symbols.
# ========================================
# Volume Up
bind = , XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5%

# Volume Down
bind = , XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%

# Toggle Mute
bind = , XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle

# Toggle Mute
bind = , XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle
# ========================================

# ========================================
# Playerctl:
# - See example here https://wiki.hyprland.org/Configuring/Binds/#media;
# - See all keys in https://wiki.linuxquestions.org/wiki/XF86_keyboard_symbols.
# ========================================
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPause, exec, playerctl pause
bindl = , XF86AudioPrev, exec, playerctl previous
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioStop, exec, playerctl stop
# ========================================

# I was not being able to make these work
bindl = , XF86MonBrightnessUp, exec, brightnessctl set 10%+
bindl = , XF86MonBrightnessDown, exec, brightnessctl set 10%-

# ========================================
# Color picker
# ========================================
bind = CTRL, PRINT, exec, hyprpicker --render-inactive --lowercase-hex --autocopy
# ========================================

# ========================================
# Screenshoter:
# - "hyprshot": Takes screenshot;
# - "swappy": Draw shapes on screenshot. Close window to finish work;
# - "pngquant": Compress result image. This gives output with 2-3 times less space, and the quality is almost perfectly the same;
# - "tee": Save image to the file;
# - "wl-copy": Copy image to clipboard.
# ========================================
# Screenshot a region: PRINT
bind = , PRINT, exec, hyprshot --freeze --silent --mode=region --raw | pngquant --skip-if-larger --speed 1 --strip - | tee "${HOME}/Pictures/Screenshots/$(date +'%Y/%m/%Y-%m-%d_%H-%M-%S').png" | wl-copy

# Screenshot a region and edit it: SHIFT + PRINT
bind = SHIFT, PRINT, exec, hyprshot --freeze --silent --mode=region --raw | swappy --file - --output-file - | pngquant --skip-if-larger --speed 1 --strip - | tee "${HOME}/Pictures/Screenshots/$(date +'%Y/%m/%Y-%m-%d_%H-%M-%S').png" | wl-copy

# Screenshot a window: MOD + PRINT
bind = $mainMod, PRINT, exec, hyprshot --freeze --silent --mode=window --raw | pngquant --skip-if-larger --speed 1 --strip - | tee "${HOME}/Pictures/Screenshots/$(date +'%Y/%m/%Y-%m-%d_%H-%M-%S').png" | wl-copy

# Screenshot a window and edit it: MOD + SHIFT + PRINT
bind = $mainMod SHIFT, PRINT, exec, hyprshot --freeze --silent --mode=window --raw | swappy --file - --output-file - | pngquant --skip-if-larger --speed 1 --strip - | tee "${HOME}/Pictures/Screenshots/$(date +'%Y/%m/%Y-%m-%d_%H-%M-%S').png" | wl-copy

# Screenshot a monitor: MOD + CTRL + PRINT
bind = $mainMod CTRL, PRINT, exec, hyprshot --freeze --silent --mode=output --raw | pngquant --skip-if-larger --speed 1 --strip - | tee "${HOME}/Pictures/Screenshots/$(date +'%Y/%m/%Y-%m-%d_%H-%M-%S').png" | wl-copy

# Screenshot a monitor and edit it: MOD + CTRL + SHIFT + PRINT
bind = $mainMod CTRL SHIFT, PRINT, exec, hyprshot --freeze --silent --mode=output --raw | swappy --file - --output-file - | pngquant --skip-if-larger --speed 1 --strip - | tee "${HOME}/Pictures/Screenshots/$(date +'%Y/%m/%Y-%m-%d_%H-%M-%S').png" | wl-copy
# ========================================
